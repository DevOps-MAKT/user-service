name: "[USER SERVICE] PR Workflow"
on:
#  workflow_dispatch:
#    pull_request:
#      types: [ opened, reopened, synchronize ]
#      paths:
#        - '.github/workflows/**'
  push:
    branches:
      - 'feature-workflows'

jobs:
  tests:
    name: "Integration Tests"
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: '~/.m2/repository'
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker=${{ hashFiles('Dockerfile') }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Run Docker Compose for Tests
        run: docker compose -f ./docker-compose.test.yml up --abort-on-container-exit

      - name: Clean up
        run: docker compose -f ./docker-compose.test.yml down

  build:
    name: "Build"
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: '~/.m2/repository'
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Install dependencies and build with Maven
        run: mvn -B clean install