quarkus.http.port=8001
quarkus.http.cors=true
quarkus.rest.path = user-service

# datasource configuration
quarkus.datasource.db-kind = postgresql
quarkus.datasource.jdbc.url= jdbc:postgresql://${POSTGRESQL_HOST:localhost}:${POSTGRESQL_PORT:5432}/${POSTGRESQL_DB:userdb}
quarkus.datasource.username=${POSTGRESQL_USERNAME}
quarkus.datasource.password=${POSTGRESQL_PASSWORD}

quarkus.native.resources.includes=import.sql

# By default, use the clean (data) slate approach
quarkus.hibernate-orm.sql-load-script=import.sql
quarkus.hibernate-orm.database.generation=drop-and-create
quarkus.hibernate-orm.database.generation.create-schemas=true

# Let's make sure we don't wipe the production data by accident!
#%prod.quarkus.hibernate-orm.database.generation = none
#%prod.quarkus.hibernate-orm.sql-load-script = no-file

#%prod-env.quarkus.hibernate-orm.sql-load-script=${INIT_DATA_SCRIPT:no-file}
#%prod-env.quarkus.hibernate-orm.database.generation=${CREATE_DB_OPTION:none}
#%prod-env.quarkus.hibernate-orm.database.generation.create-schemas=${INIT_DATA_BOOL:false}


%dev.quarkus.datasource.db-kind = postgresql
%dev.quarkus.datasource.username = ${DATABASE_USERNAME}
%dev.quarkus.datasource.password = ${DATABASE_PASSWORD}
%dev.quarkus.datasource.jdbc.url = jdbc:postgresql://${DATABASE_DOMAIN:localhost}:${DATABASE_PORT:5432}/${DATABASE_NAME:userdb}

%dev.quarkus.hibernate-orm.database.generation=drop-and-create


#test
%test.quarkus.log.console.format=%d{HH:mm:ss} %-5p [%c{2.}] %m%n
%test.quarkus.log.level=DEBUG

#build
quarkus.package.type=fast-jar

#jwt
smallrye.jwt.sign.key.location=file:src/main/resources/jwt/privateKey.pem
mp.jwt.verify.issuer=user-service
mp.jwt.verify.publickey.location=file:src/main/resources/jwt/publicKey.pem